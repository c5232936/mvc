//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BillingApplication.DBContexts
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Billing_StagingEntities1 : DbContext
    {
        public Billing_StagingEntities1()
            : base("name=Billing_StagingEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ImSS_Balance> ImSS_Balance { get; set; }
        public virtual DbSet<ImSS_Business_Unit> ImSS_Business_Unit { get; set; }
        public virtual DbSet<ImSS_Category> ImSS_Category { get; set; }
        public virtual DbSet<ImSS_Client_List> ImSS_Client_List { get; set; }
        public virtual DbSet<ImSS_Currency_Rate> ImSS_Currency_Rate { get; set; }
        public virtual DbSet<ImSS_Domain> ImSS_Domain { get; set; }
        public virtual DbSet<ImSS_Expenses> ImSS_Expenses { get; set; }
        public virtual DbSet<ImSS_Invoice_Master> ImSS_Invoice_Master { get; set; }
        public virtual DbSet<ImSS_Location> ImSS_Location { get; set; }
        public virtual DbSet<ImSS_Master_Emp_List_c10406> ImSS_Master_Emp_List_c10406 { get; set; }
        public virtual DbSet<ImSS_Master_PO> ImSS_Master_PO { get; set; }
        public virtual DbSet<ImSS_Order_Status> ImSS_Order_Status { get; set; }
        public virtual DbSet<ImSS_Reporting_Head> ImSS_Reporting_Head { get; set; }
        public virtual DbSet<ImSS_Skills_Category> ImSS_Skills_Category { get; set; }
        public virtual DbSet<ImSS_Status> ImSS_Status { get; set; }
        public virtual DbSet<ImSS_TargetedVsActual> ImSS_TargetedVsActual { get; set; }
        public virtual DbSet<ImSS_Year> ImSS_Year { get; set; }
        public virtual DbSet<ImSS_Currency> ImSS_Currency { get; set; }
        public virtual DbSet<ImSS_Cust_Emp_Details> ImSS_Cust_Emp_Details { get; set; }
        public virtual DbSet<ImSS_MasterManager> ImSS_MasterManager { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ImSS_Cilent_Status> ImSS_Cilent_Status { get; set; }
        public virtual DbSet<ImSS_Payment_Mode> ImSS_Payment_Mode { get; set; }
        public virtual DbSet<ImSS_Shadow> ImSS_Shadow { get; set; }
        public virtual DbSet<ImSS_Master_Emp_List> ImSS_Master_Emp_List { get; set; }
        public virtual DbSet<ImSS_Emp_Details> ImSS_Emp_Details { get; set; }
        public virtual DbSet<ImSS_Master_Client> ImSS_Master_Client { get; set; }
        public virtual DbSet<ImSS_Client_Details> ImSS_Client_Details { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spMaster_Emp_c10406_Update_Experiance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMaster_Emp_c10406_Update_Experiance");
        }
    
        public virtual ObjectResult<Calculation_Result> Calculation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Calculation_Result>("Calculation");
        }
    
        public virtual int USP_Emp_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_Emp_Details");
        }
    }
}
